(function() {var implementors = {};
implementors["ferrisetw"] = [{"text":"impl UnwindSafe for EventTraceProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventTraceLogfile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnableTraceParameters","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceEventInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventPropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DecodingSource","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EvntraceNativeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PlaError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HResult","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TdhNativeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Property","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropertyFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TdhInType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TdhOutType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VersionHelperError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Parser&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pointer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParserError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PropertyInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Provider","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ProviderError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KernelProvider","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VIRTUAL_ALLOC_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VAMAP_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for THREAD_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SPLIT_IO_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SYSTEM_CALL_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for REGISTRY_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PROFILE_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PROCESS_COUNTER_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PROCESS_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TCP_IP_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MEMORY_PAGE_FAULT_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MEMORY_HARD_FAULT_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for INTERRUPT_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DRIVER_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DPC_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IMAGE_LOAD_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for THREAD_DISPATCHER_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FILE_INIT_IO_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FILE_IO_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DISK_IO_INIT_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DISK_IO_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DISK_FILE_IO_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DEBUG_PRINT_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CONTEXT_SWITCH_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ALPC_PROVIDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SchemaLocator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Schema","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SchemaError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceProperties","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UserTrace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KernelTrace","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TraceError","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()